Prompting Strategies in VFFinder (Effective Vulnerable Function Identification)

Location: Section 4.1.3 “Query Design” 

Prompt Format (Figure 5) 

1. Instruction:
   I want you to act like an expert in vulnerability report analysis, I will give you a description. Your task is to extract the attack vector and root cause from it. Attack vector is the method of triggering the vulnerability. If you cannot find the corresponding answer, just answer None.

2. Demonstration Cases:
   Description: OpenRefine before 3.2 beta allows directory traversal via a relative pathname in a ZIP archive
   Answer: {"attack vector": "relative pathname in a ZIP archive", "root cause": "None"}

   Description: [Next most similar example…]
   Answer: {...}

   Description: [Next most similar example…]
   Answer: {...}

   Description: Apache OpenMeetings before 3.1.2 is vulnerable to Remote Code Execution via RMI deserialization attack.
   Answer: {"attack vector": "RMI deserialization attack", "root cause": "None"}

3. CVE Description:
   The input CVE description to analyze (e.g., CVE‑2016‑8736).

4. Output Field:
   A JSON object with keys "attack vector" and "root cause".

Additional Details:
- Model: ChatGPT (gpt‑3.5‑turbo‑0613) 
- Demonstration cases are selected by a customized pattern‑embedding retrieval (Section 4.1.2) to pick the three most similar CVE descriptions in ascending order of pattern similarity.
- The prompt comprises three parts—Instruction, Demonstration Cases, and CVE Description—to guide the LLM in precise in‑context extraction without fine‑tuning. 

Results of Prompting Strategies:

1. Entity Extraction Performance:
- CaVAE baseline: 7% coverage, average JSI 0.04
- Direct LLM: 41% coverage, average JSI 0.35
- Semantic-ICL: 56% coverage, average JSI 0.54
- Pattern-ICL (VFFinder): 59% coverage, average JSI 0.58
  (Pattern-ICL achieved highest coverage and precision with shorter outputs)

2. Vulnerable Function Localization:
- Top@1: 27.27%
- Top@3: 46.75%
- Top@5: 53.25%
- Top@10: 63.64%
- Top@30: 77.92%
- Mean Reciprocal Rank (MRR): 0.39

3. Ablation Study (Average drop in Top-K accuracy when removing component):
- Class matching: –14.2%
- ICL-enhanced extraction: –10.8%
- Invocation augmentation: –10.6%
- Description weighting: –4.7%

4. Reduction in SCA False Positives:
- Snyk FPR reduced from 56.1% → 4.6% (using top 50 VFs)
- Dependency-Check FPR reduced from 67.1% → 3.7%
- Using top 10 VFs drives both FPRs below 1%
